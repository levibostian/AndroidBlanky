apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'dagger.hilt.android.plugin'

apply from: '../code-cov.gradle'

hilt {
    enableTransformForLocalTests = true // to get unit tests (robolectric) working
}

android {
    compileSdkVersion 29
    packagingOptions {
        resources {
            excludes += ['META-INF/ASL2.0', 'META-INF/LICENSE', 'META-INF/NOTICE']
        }
    }


    defaultConfig {
        applicationId "earth.levi.androidblanky"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1528215515
        versionName "0.1.0"

        testInstrumentationRunner "com.app.AndroidTestTestRunner"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    signingConfigs {
        releaseSigning {
            storeFile rootProject.file('keystores/upload.keystore')
            storePassword System.getenv("ANDROID_SIGNING_STORE_PASSWORD") ?: ""
            keyAlias System.getenv("ANDROID_SIGNING_ALIAS") ?: ""
            keyPassword System.getenv("ANDROID_SIGNING_KEY_PASSWORD") ?: ""
        }
    }

    buildTypes {
        debug {
            defaultConfig.minSdkVersion 23
            defaultConfig.multiDexEnabled false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
            signingConfig signingConfigs.releaseSigning
        }
    }

    testOptions {
        animationsDisabled = true
        // robolectric: http://robolectric.org/getting-started/
        unitTests.includeAndroidResources = true

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())

        // Put code into below directory that you want shared between unit and integration tests.
        String sharedTestDir = 'src/sharedTest/java'
        test.java.srcDirs += sharedTestDir
        androidTest.java.srcDirs += sharedTestDir
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX UI libs
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    debugImplementation 'androidx.fragment:fragment-testing:1.2.5'
    implementation "com.google.android.material:material:1.1.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'androidx.preference:preference:1.1.1'

    // multidex support for android sdk versions below v21
    implementation "androidx.multidex:multidex:2.0.1"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigationVersion"

    // Teller
    implementation 'com.github.levibostian:Teller-Android:6f2ec8b3ba'

    // Wendy
    implementation 'com.github.levibostian:Wendy-Android:b14c06c7f0'

    // WorkManager
    def work_version = "2.4.0"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"

    // Coil
    implementation 'io.coil-kt:coil:0.11.0'

    // Room
    def roomVersion = "2.2.5"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    // Hilt
    def hiltAndroidXVersion="1.0.0-alpha02"
    def hiltVersion="2.28.3-alpha"
    def daggerVersion="2.27"
    // Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltAndroidXVersion"
    implementation "androidx.hilt:hilt-work:$hiltAndroidXVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltAndroidXVersion"

    // Hilt testing
    testImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kaptTest "androidx.hilt:hilt-compiler:$hiltAndroidXVersion"
    // Android tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$hiltAndroidXVersion"

    // JUnit
    def junitVersion = '4.13'
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation 'androidx.test.ext:junit:1.1.1'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

    // Mockito
    def mockitoVersion = '3.3.3'
    def mockitoKotlinVersion = '2.2.0'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion", {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion", {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }

    // Robolectric
    testImplementation 'org.robolectric:robolectric:4.3.1'
    
    // recyclerview matcher
    testImplementation 'com.github.levibostian:RecyclerViewMatcher:0.1.0'
    androidTestImplementation 'com.github.levibostian:RecyclerViewMatcher:0.1.0'

    // Android Testing Support Library's runner and rules
    def androidTestLibVersion = "1.2.0"
    androidTestImplementation "androidx.test:core-ktx:$androidTestLibVersion"
    androidTestImplementation "androidx.test:runner:$androidTestLibVersion"
    androidTestImplementation "androidx.test:rules:$androidTestLibVersion"
    testImplementation "androidx.test:core-ktx:$androidTestLibVersion"
    testImplementation "androidx.test:runner:$androidTestLibVersion"
    testImplementation "androidx.test:rules:$androidTestLibVersion"

    // Espresso UI Testing
    def espressoVersion = '3.2.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    // androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"
    // androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    // testImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"
    // testImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
    testImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
}

configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}
// enable java8, from: https://coil-kt.github.io/coil/getting_started/#java-8
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}