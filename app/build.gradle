apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

apply from: '../code-cov.gradle'

android {
    compileSdkVersion 31
    packagingOptions {
        resources {
            excludes += ['META-INF/ASL2.0', 'META-INF/LICENSE', 'META-INF/NOTICE']
        }
    }

    defaultConfig {
        applicationId "earth.levi.androidblanky"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 1644770828
        versionName "1.0.0"

        testInstrumentationRunner "com.app.AndroidTestTestRunner"

        multiDexEnabled false
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    signingConfigs {
        releaseSigning {
            storeFile rootProject.file('keystores/upload.keystore')
            storePassword System.getenv("ANDROID_SIGNING_STORE_PASSWORD") ?: ""
            keyAlias System.getenv("ANDROID_SIGNING_ALIAS") ?: ""
            keyPassword System.getenv("ANDROID_SIGNING_KEY_PASSWORD") ?: ""
        }
    }

    buildTypes {
        debug {
            defaultConfig.minSdkVersion 23
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
            signingConfig signingConfigs.releaseSigning
        }
    }

    testOptions {
        animationsDisabled = true
        // robolectric: http://robolectric.org/getting-started/
        unitTests.includeAndroidResources = true

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())

        // Put code into below directory that you want shared between unit and integration tests.
        String sharedTestDir = 'src/sharedTest/java'
        test.java.srcDirs += sharedTestDir
        androidTest.java.srcDirs += sharedTestDir
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'

    // Coil
    implementation 'io.coil-kt:coil:0.11.0'

    // Room
    def roomVersion = "2.4.1"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    // Hilt testing: Robolectric (note: if using jetpack hilt integrations, add those as test dependencies, too)
    testImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    // Hilt testing: Android instrumentation tests (note: if using jetpack hilt integrations, add those as test dependencies, too)
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // JUnit
    def junitVersion = '4.13'
    def junitAndroidXVersion = '1.1.3'
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitAndroidXVersion"
    testImplementation "androidx.test.ext:junit:$junitAndroidXVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    def coroutineVersion = '1.5.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion"
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion") {
        // conflicts with mockito due to direct inclusion of byte buddy
        // see: https://github.com/Kotlin/kotlinx.coroutines/issues/2023#issuecomment-665150312
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    // Mockito
    def mockitoVersion = '4.3.1'
    def mockitoKotlinVersion = '2.2.0'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion", {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion", {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }

    // Robolectric
    testImplementation 'org.robolectric:robolectric:4.7.3'

    // Android Testing Support Library's runner and rules
    def androidTestLibVersion = "1.4.0"
    androidTestImplementation "androidx.test:core-ktx:$androidTestLibVersion"
    androidTestImplementation "androidx.test:runner:$androidTestLibVersion"
    androidTestImplementation "androidx.test:rules:$androidTestLibVersion"
    testImplementation "androidx.test:core-ktx:$androidTestLibVersion"
    testImplementation "androidx.test:runner:$androidTestLibVersion"
    testImplementation "androidx.test:rules:$androidTestLibVersion"

    // Truth
    def truthVersion = "1.1.3"
    testImplementation "com.google.truth:truth:$truthVersion"
    androidTestImplementation "com.google.truth:truth:$truthVersion"

    // OkHttp
    def okHttpVersion = "4.9.3"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    testImplementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    androidTestImplementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"

    // Espresso UI Testing
    def espressoVersion = '3.4.0'
    // {exclude} fixes issue: https://github.com/android/android-test/issues/861#issuecomment-872582819
    androidTestImplementation("androidx.test.espresso:espresso-core:$espressoVersion") { exclude group: 'org.checkerframework', module: 'checker' }
    testImplementation("androidx.test.espresso:espresso-core:$espressoVersion") { exclude group: 'org.checkerframework', module: 'checker' }
    androidTestImplementation("androidx.test.espresso:espresso-contrib:$espressoVersion")  { exclude group: 'org.checkerframework', module: 'checker' }
    testImplementation("androidx.test.espresso:espresso-contrib:$espressoVersion")  { exclude group: 'org.checkerframework', module: 'checker' }
    androidTestImplementation("androidx.test.espresso:espresso-intents:$espressoVersion")  { exclude group: 'org.checkerframework', module: 'checker' }
    testImplementation("androidx.test.espresso:espresso-intents:$espressoVersion")  { exclude group: 'org.checkerframework', module: 'checker' }
}

// enable java8, from: https://coil-kt.github.io/coil/getting_started/#java-8
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
